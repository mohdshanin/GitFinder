{"version":3,"sources":["components/layout/Navbar.jsx","components/layout/Footer.jsx","components/layout/Ripple.gif","components/layout/Spinner.jsx","components/repos/RepoItems.jsx","context/github/githubContext.jsx","components/repos/Repos.jsx","components/users/User.jsx","components/pages/About.jsx","components/layout/Alert.jsx","context/alert/alertContext.jsx","components/layout/Search.jsx","components/users/UserItems.jsx","components/users/Users.jsx","components/pages/Home.jsx","components/pages/NotFound.jsx","context/types.jsx","context/github/githubReducer.jsx","context/github/GithubState.jsx","context/alert/alertReducer.jsx","context/alert/AlertState.jsx","App.js","index.js"],"names":["Navbar","className","exact","to","activeClassName","Footer","Spinner","src","Spiner","alt","RepoItems","repo","name","html_url","href","githubContext","createContext","Repos","userRepos","useContext","GithubContext","map","id","User","match","useEffect","getUser","params","login","getUserRepos","user","avatar_url","company","blog","location","email","hireable","bio","twitter_username","public_repos","public_gists","followers","following","loading","style","backgroundColor","color","target","display","alignItems","About","Alert","alertContext","Search","AlertContext","useState","text","setText","FirstUsers","alert","onSubmit","e","preventDefault","setAlert","setTimeout","clearAlert","searchUsers","type","value","onChange","placeholder","users","length","onClick","clearuser","width","UserItems","Users","Home","NotFound","FIRST_USERS","SEARCH_USERS","REMOVE_USERS","GET_USER","GET_REPOS","SET_ALERT","REMOVE_ALERT","SET_LOADING","githubReducer","state","action","payload","GithubState","props","githubClientId","githubClientSecret","useReducer","GithubReducer","dispatch","process","GITHUB_CLIENT_ID","GITHUB_CLIENT_SECRET","a","setLoading","axios","get","res","data","items","REACT_APP_GITHUB_CLIENT_ID","REACT_APP_GITHUB_CLIENT_SECRET","Provider","children","AlertState","AlertReducer","App","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.32bb724c.chunk.js","sourcesContent":["import React from 'react';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <div className=\"nav\">\r\n      <NavLink exact to=\"/Gitfinder/\">\r\n        <h2>\r\n          <GitHubIcon className=\"icon\" /> Git Finder\r\n        </h2>\r\n      </NavLink>\r\n      <div className=\"\">\r\n        <NavLink exact to=\"/Gitfinder/\" activeClassName=\"active_nav\">\r\n          Home\r\n        </NavLink>\r\n        <NavLink exact to=\"/Gitfinder/about\" activeClassName=\"active_nav\">\r\n          About\r\n        </NavLink>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"footer\">\r\n      <h3>Â©CopyRight 2021 | Git Finder</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","export default __webpack_public_path__ + \"static/media/Ripple.f3549b55.gif\";","import React from 'react';\r\nimport Spiner from './Ripple.gif';\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"spinner\">\r\n      <img src={Spiner} alt=\"Loading\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { Fragment } from 'react';\r\n\r\nconst RepoItems = ({ repo }) => {\r\n  const { name, html_url } = repo;\r\n  return (\r\n    <Fragment>\r\n      <span className=\"repo\">\r\n        <a href={html_url}>{name}</a>\r\n      </span>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default RepoItems;\r\n","import { createContext } from 'react';\r\n\r\nconst githubContext = createContext();\r\n\r\nexport default githubContext;\r\n","import React, { useContext } from 'react';\r\nimport RepoItems from './RepoItems';\r\nimport GithubContext from '../../context/github/githubContext';\r\n\r\nconst Repos = ({ userRepos }) => {\r\n  const githubContext = useContext(GithubContext);\r\n\r\n  return (\r\n    <div className=\"repos\">\r\n      {githubContext.userRepos.map((repo) => (\r\n        <RepoItems key={repo.id} repo={repo} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Repos;\r\n","import React, { useEffect, useContext } from 'react';\r\nimport DoneOutlineRoundedIcon from '@material-ui/icons/DoneOutlineRounded';\r\nimport RemoveCircleOutlinedIcon from '@material-ui/icons/RemoveCircleOutlined';\r\nimport { Link } from 'react-router-dom';\r\nimport Spinner from '../layout/Spinner';\r\nimport Repos from '../repos/Repos';\r\nimport GithubContext from '../../context/github/githubContext';\r\n\r\nconst User = ({ match }) => {\r\n  const githubContext = useContext(GithubContext);\r\n\r\n  useEffect(() => {\r\n    githubContext.getUser(match.params.login);\r\n    githubContext.getUserRepos(match.params.login);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const {\r\n    login,\r\n    avatar_url,\r\n    html_url,\r\n    name,\r\n    company,\r\n    blog,\r\n    location,\r\n    email,\r\n    hireable,\r\n    bio,\r\n    twitter_username,\r\n    public_repos,\r\n    public_gists,\r\n    followers,\r\n    following,\r\n  } = githubContext.user;\r\n\r\n  if (githubContext.loading) {\r\n    return <Spinner />;\r\n  } else {\r\n    return (\r\n      <div className=\"user\">\r\n        <button style={{ backgroundColor: '#aaa' }}>\r\n          <Link to=\"/\">Back To Search</Link>\r\n        </button>\r\n        <span>\r\n          Hireable:\r\n          {hireable ? (\r\n            <DoneOutlineRoundedIcon\r\n              className=\"icon\"\r\n              style={{ color: 'green' }}\r\n            />\r\n          ) : (\r\n            <RemoveCircleOutlinedIcon\r\n              className=\"icon\"\r\n              style={{ color: 'red' }}\r\n            />\r\n          )}\r\n        </span>\r\n        <div className=\"user_grid\">\r\n          <div className=\"left\">\r\n            <a href={avatar_url} target=\"blank\">\r\n              <img src={avatar_url} alt=\"\" />\r\n            </a>\r\n            <h2>{login} </h2>\r\n            <p>\r\n              Location: {location ? <span> {location}</span> : ' Not Available'}\r\n            </p>\r\n            {email && (\r\n              <p>\r\n                <span>Email:</span> {email}\r\n              </p>\r\n            )}\r\n          </div>\r\n          <div className=\"right\">\r\n            {bio && (\r\n              <p>\r\n                <span>Bio:</span> {bio}\r\n              </p>\r\n            )}\r\n            <button>\r\n              <a href={html_url} target=\"blank\">\r\n                Go To Github\r\n              </a>\r\n            </button>\r\n            {name && (\r\n              <p>\r\n                Name: <span>{name}</span>\r\n              </p>\r\n            )}\r\n            {company && (\r\n              <p>\r\n                Company: <span>{company}</span>\r\n              </p>\r\n            )}\r\n\r\n            {twitter_username && (\r\n              <p>\r\n                Twitter: <span>{twitter_username}</span>\r\n              </p>\r\n            )}\r\n\r\n            <div style={{ display: 'flex', alignItems: 'center' }}>\r\n              <span>Website:</span>\r\n              {blog ? (\r\n                <a href={blog} target=\"blank\" className=\"web\">\r\n                  <p> {blog} </p>\r\n                </a>\r\n              ) : (\r\n                ' Not Available'\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"container\">\r\n          <span className=\"card_1\">Repos: {public_repos}</span>\r\n          <span className=\"card_2\">Gists: {public_gists}</span>\r\n          <span className=\"card_3\">Followers: {followers}</span>\r\n          <span className=\"card_4\">Following: {following}</span>\r\n        </div>\r\n        <Repos />\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default User;\r\n","import React from 'react';\r\n\r\nconst About = () => {\r\n  return (\r\n    <div className=\"about \">\r\n      <h1> This is a About Page</h1>\r\n      <h4>Version 1.0.1</h4>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from 'react';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\n\r\nconst Alert = () => {\r\n  return (\r\n    <div className=\"alert\">\r\n      <InfoIcon className=\"icon\" />\r\n      Please Enter Something For Search.\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import { createContext } from 'react';\r\n\r\nconst alertContext = createContext();\r\n\r\nexport default alertContext;\r\n","import React, { useState, Fragment, useContext, useEffect } from 'react';\r\nimport Alert from './Alert';\r\n\r\nimport GithubContext from '../../context/github/githubContext';\r\nimport AlertContext from '../../context/alert/alertContext';\r\n\r\nconst Search = () => {\r\n  const githubContext = useContext(GithubContext);\r\n  const alertContext = useContext(AlertContext);\r\n\r\n  const [text, setText] = useState('');\r\n\r\n  useEffect(() => {\r\n    githubContext.FirstUsers();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const onChange = (e) => {\r\n    setText(e.target.value);\r\n  };\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (text === '') {\r\n      alertContext.setAlert();\r\n      setTimeout(() => {\r\n        alertContext.clearAlert();\r\n      }, 3000);\r\n    } else {\r\n      githubContext.searchUsers(text);\r\n      setText('');\r\n    }\r\n  };\r\n  return (\r\n    <Fragment>\r\n      {alertContext.alert && <Alert />}\r\n      <form onSubmit={onSubmit} className=\"form\">\r\n        <input\r\n          type=\"text\"\r\n          value={text}\r\n          onChange={onChange}\r\n          placeholder=\"Search User...\"\r\n        />\r\n        <input type=\"submit\" value=\"Search\" />\r\n      </form>\r\n      {githubContext.users.length > 0 && (\r\n        <button\r\n          onClick={githubContext.clearuser}\r\n          style={{ width: '50%', backgroundColor: '#aaa' }}\r\n        >\r\n          Clear\r\n        </button>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst UserItems = ({ user: { avatar_url, login } }) => {\r\n  return (\r\n    <div className=\"container\">\r\n      <img src={avatar_url} alt=\"img\" />\r\n      <h3>{login} </h3>\r\n      <button>\r\n        <Link to={`/Gitfinder/user/${login}`}>More</Link>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserItems;\r\n","import React, { useContext } from 'react';\r\nimport UserItems from './UserItems';\r\nimport Spinner from '../layout/Spinner';\r\nimport GithubContext from '../../context/github/githubContext';\r\n\r\nconst Users = () => {\r\n  const githubContext = useContext(GithubContext);\r\n\r\n  if (githubContext.loading) {\r\n    return <Spinner />;\r\n  } else {\r\n    return (\r\n      <div className=\"users_grid\">\r\n        {githubContext.users.map((user) => (\r\n          <UserItems key={user.id} user={user} />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Users;\r\n","import React, { Fragment } from 'react';\r\nimport Search from '../layout/Search';\r\nimport Users from '../users/Users';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"home\">\r\n        <Search />\r\n        <Users />\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div className=\"not_found\">\r\n      <span className=\"alert\">\r\n        <InfoIcon className=\"icon\" /> Error\r\n      </span>\r\n      <h1>Sorry, Page Not Found !</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","const FIRST_USERS = 'FIRST_USERS';\r\nconst SEARCH_USERS = 'SEARCH_USERS';\r\nconst REMOVE_USERS = 'REMOVE_USERS';\r\nconst GET_USER = 'GET_USER';\r\nconst GET_REPOS = 'GET_REPOS';\r\nconst SET_ALERT = 'SET_ALERT';\r\nconst REMOVE_ALERT = 'REMOVE_ALERT';\r\nconst SET_LOADING = 'SET_LOADING';\r\n\r\nexport {\r\n  FIRST_USERS,\r\n  SEARCH_USERS,\r\n  REMOVE_USERS,\r\n  GET_USER,\r\n  GET_REPOS,\r\n  SET_ALERT,\r\n  REMOVE_ALERT,\r\n  SET_LOADING,\r\n};\r\n","import {\r\n  FIRST_USERS,\r\n  SEARCH_USERS,\r\n  REMOVE_USERS,\r\n  GET_USER,\r\n  GET_REPOS,\r\n  SET_LOADING,\r\n} from '../types';\r\n\r\nconst githubReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case FIRST_USERS:\r\n      return { ...state, users: action.payload, loading: false };\r\n    case SEARCH_USERS:\r\n      return { ...state, users: action.payload, loading: false };\r\n    case GET_USER:\r\n      return { ...state, user: action.payload, loading: false };\r\n    case GET_REPOS:\r\n      return { ...state, userRepos: action.payload, loading: false };\r\n    case REMOVE_USERS:\r\n      return { ...state, users: [], loading: false };\r\n    case SET_LOADING:\r\n      return { ...state, loading: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default githubReducer;\r\n","import React, { useReducer } from 'react';\r\nimport axios from 'axios';\r\nimport GithubReducer from './githubReducer';\r\nimport GithubContext from './githubContext';\r\n\r\nimport {\r\n  FIRST_USERS,\r\n  SEARCH_USERS,\r\n  REMOVE_USERS,\r\n  GET_USER,\r\n  GET_REPOS,\r\n  SET_LOADING,\r\n} from '../types';\r\n\r\nconst GithubState = (props) => {\r\n  const istate = {\r\n    user: {},\r\n    userRepos: [],\r\n    users: [],\r\n    loading: false,\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(GithubReducer, istate);\r\n\r\n  let githubClientId;\r\n  let githubClientSecret;\r\n\r\n  if (process.env.NODE_ENV === 'production') {\r\n    githubClientId = process.env.GITHUB_CLIENT_ID;\r\n    githubClientSecret = process.env.GITHUB_CLIENT_SECRET;\r\n  } else {\r\n    githubClientId = process.env.REACT_APP_GITHUB_CLIENT_ID;\r\n    githubClientSecret = process.env.REACT_APP_GITHUB_CLIENT_SECRET;\r\n  }\r\n\r\n  //todo First 30 Users\r\n  const FirstUsers = async () => {\r\n    setLoading();\r\n    const res = await axios.get(`https://api.github.com/users`);\r\n    dispatch({\r\n      type: FIRST_USERS,\r\n      payload: res.data,\r\n    });\r\n  };\r\n\r\n  //* Search Users\r\n  const searchUsers = async (text) => {\r\n    setLoading();\r\n    const res = await axios.get(\r\n      `https://api.github.com/search/users?q=${text}&client_id=${githubClientId}&client_secret=${githubClientSecret}`\r\n    );\r\n    dispatch({\r\n      type: SEARCH_USERS,\r\n      payload: res.data.items,\r\n    });\r\n  };\r\n\r\n  //* Clear users\r\n  const clearuser = () => {\r\n    dispatch({\r\n      type: REMOVE_USERS,\r\n    });\r\n  };\r\n\r\n  //* Search Single User\r\n  const getUser = async (login) => {\r\n    setLoading(true);\r\n    const res = await axios.get(\r\n      `https://api.github.com/users/${login}?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\r\n    );\r\n    dispatch({\r\n      type: GET_USER,\r\n      payload: res.data,\r\n    });\r\n  };\r\n\r\n  //* User Repos\r\n  const getUserRepos = async (login) => {\r\n    setLoading(true);\r\n    const res = await axios.get(\r\n      `https://api.github.com/users/${login}/repos?per_page=5&sort=created:asc&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\r\n    );\r\n    dispatch({\r\n      type: GET_REPOS,\r\n      payload: res.data,\r\n    });\r\n  };\r\n\r\n  //*Set Loading\r\n  const setLoading = () => {\r\n    dispatch({ type: SET_LOADING });\r\n  };\r\n\r\n  return (\r\n    <GithubContext.Provider\r\n      value={{\r\n        users: state.users,\r\n        loading: state.loading,\r\n        user: state.user,\r\n        userRepos: state.userRepos,\r\n        FirstUsers,\r\n        searchUsers,\r\n        clearuser,\r\n        getUser,\r\n        getUserRepos,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </GithubContext.Provider>\r\n  );\r\n};\r\n\r\nexport default GithubState;\r\n","import { SET_ALERT, REMOVE_ALERT } from '../types';\r\n\r\n// eslint-disable-next-line\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case SET_ALERT:\r\n      return {\r\n        ...state,\r\n        alert: action.payload,\r\n      };\r\n    case REMOVE_ALERT:\r\n      return {\r\n        ...state,\r\n        alert: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { useReducer } from 'react';\r\nimport alertContext from '../../context/alert/alertContext';\r\n\r\nimport AlertReducer from '../../context/alert/alertReducer';\r\n\r\nimport { SET_ALERT, REMOVE_ALERT } from '../types';\r\n\r\nconst AlertState = (props) => {\r\n  const istate = { alert: false };\r\n  const [state, dispatch] = useReducer(AlertReducer, istate);\r\n\r\n  //   Set Alert\r\n  const setAlert = () => {\r\n    dispatch({\r\n      type: SET_ALERT,\r\n      payload: true,\r\n    });\r\n  };\r\n  const clearAlert = () => {\r\n    dispatch({\r\n      type: REMOVE_ALERT,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <alertContext.Provider value={{ alert: state.alert, setAlert, clearAlert }}>\r\n      {props.children}\r\n    </alertContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AlertState;\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Navbar from './components/layout/Navbar';\r\nimport Footer from './components/layout/Footer';\r\n\r\nimport User from './components/users/User';\r\nimport About from './components/pages/About';\r\nimport Home from './components/pages/Home';\r\nimport NotFound from './components/pages/NotFound';\r\nimport './sass/App.css';\r\n\r\nimport GithubState from './context/github/GithubState';\r\nimport AlertState from './context/alert/AlertState';\r\n\r\nconst App = () => {\r\n  return (\r\n    <GithubState>\r\n      <AlertState>\r\n        <div className=\"main_div\">\r\n          <Navbar />\r\n          <Switch>\r\n            <Route exact path=\"/Gitfinder/user/:login\" component={User} />\r\n            <Route exact path=\"/Gitfinder/about\" component={About} />\r\n            <Route exact path=\"/Gitfinder/\" component={Home} />\r\n            <Route path=\"/Gitfinder\" component={NotFound} />\r\n            <Route component={NotFound} />\r\n          </Switch>\r\n          <Footer />\r\n        </div>\r\n      </AlertState>\r\n    </GithubState>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}